version: '3.4'
services:
  proxyreverse.webapp:
    container_name: proxyreverse.webapp
    image: '${DOCKER_REGISTRY-}proxyreversewebapp'
    build:
      context: .
      dockerfile: ProxyReverse.WebApp/Dockerfile
    depends_on:
      - proxyreverse.sql_server
      - proxyreverse.cache_server
      - proxyreverse.queue
    networks:
      - proxyreverse.network
    ports:
      - '3100:80'
      - '3101:443'
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: 'https://+:443;http://+:80'
      DefaultConnection: 'Data Source=proxyreverse.sql_server,1433;Persist Security Info=True;User ID=sa;Password=Dev1234@'
    volumes:
      - '${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro'
      - '${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro'

  proxyreverse.client.cli:
    container_name: proxyreverse.clientapp
    image: '${DOCKER_REGISTRY-}proxyreverseclientcli'
    build:
      context: .
      dockerfile: ProxyReverse.Client.CLI/Dockerfile
    environment:
      web_app: '{uri: ''proxyreverse.webapp'', http: 3100, https: 3101}'
    depends_on:
      - proxyreverse.webapp
    networks:
      - proxyreverse.network

  proxyreverse.sql_server:
    container_name: proxyreverse.sql_server
    image: mcr.microsoft.com/mssql/server
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: Dev1234@
      MSSQL_PID: Developer
    ports:
      - '3200:1433'
    networks:
      - proxyreverse.network

  proxyreverse.cache_server:
    container_name: proxyreverse.cache_server
    image: redis
    ports:
      - '3300:3300'
    networks:
      - proxyreverse.network

  proxyreverse.queue:
    container_name: proxyreverse.queue
    image: 'rabbitmq:3-management-alpine'
    ports:
      - '3400:5672'
      - '3401:15672'
    environment:
      RABBITMQ_DEFAULT_USER: rabitmquser
      RABBITMQ_DEFAULT_PASS: Dev1234@
    networks:
      - proxyreverse.network
networks:
  proxyreverse.network:
    driver: bridge
